<!doctype html>
<html lang="en">
 <head>
  <meta charset="UTF-8">
  <meta name="Generator" content="EditPlus®">
  <meta name="Author" content="">
  <meta name="Keywords" content="">
  <meta name="Description" content="">
  <title>AJAX中的XML格式</title>
  <script src="mytools.js"></script>
 </head>
 <body>
  <input type="button" id="btn" value="XML格式的AJAX">
  <script>
	var btn = document.getElementById("btn");
	btn.onclick = function(){
		var xhr = getXhr();
		xhr.open("post","06.php");
		xhr.setRequestHeader("Content-Type","application/x-www-form-urlencoded");
		
		/*
		   如何向服务器端发送XML格式的数据内容?
		   * 构建成符合XML格式的字符串数据
		   * 请求数据格式一定是 name=value&name=value
		 */
		var xmlString = "<user><name>zhangwuji</name><pwd>12345</pwd></user>";
		xhr.send("data="+xmlString);

		xhr.onreadystatechange = function(){
			if(xhr.readyState == 4 && xhr.status == 200){
				var data = xhr.responseXML;
				console.log(data);
			}
		}
	}
  </script>
 </body>
</html>

<!--mytools.js-->
	// 创建Ajax的核心对象(不兼容IE6)
function getXhr(){
	var xhr = null;//定义核心对象
	if(window.XMLHttpRequest){//其他浏览器
		xhr = new XMLHttpRequest();
	}else{//IE浏览器
		xhr = new ActiveXObject("Microsoft.XMLHttp");
	}
	return xhr;
}
// 创建Ajax的核心对象(兼容IE6)
function getXhr2(){
	var xhr = null;
	try{//其他浏览器
		xhr = new XMLHttpRequest();
	}catch(e){//IE浏览器
		try{//IE7+
			xhr = new ActiveXObject("Microsoft.XMLHttp");
		}catch(e){//IE6
			xhr = new ActiveXObject("Msxml2.XMLHttp");
		}
	}
	return xhr;
}
// 创建XML解析器
function getXml(xmlString){
	var xmlDoc = null;//定义XML DOM对象
	if(window.DOMParser){//其他浏览器
	    var parser = new DOMParser();//创建解析器
		xmlDoc = parser.parseFromString(xmlString,"text/xml");//利用解析器进行解析
	}else{//IE浏览器
	    xmlDoc = new ActiveXObject("Microsoft.XMLDOM");
		xmlDoc.async = false;
		xmlDoc.loadXML(xmlString);
	}
	return xmlDoc;
}
